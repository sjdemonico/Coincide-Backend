/*
   This file was generated automatically by the Mojo IDE version B1.3.5.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module duplicator_5 (
    input clk,
    input rst,
    input pulse,
    output reg out
  );
  
  
  
  wire [1-1:0] M_edge_out;
  reg [1-1:0] M_edge_in;
  edge_detector_28 L_edge (
    .clk(clk),
    .in(M_edge_in),
    .out(M_edge_out)
  );
  
  wire [(1'h1+0)-1:0] M_sync_out;
  reg [(1'h1+0)-1:0] M_sync_in;
  
  genvar GEN_sync0;
  generate
  for (GEN_sync0=0;GEN_sync0<1'h1;GEN_sync0=GEN_sync0+1) begin: sync_gen_0
    pipeline_29 sync (
      .clk(clk),
      .in(M_sync_in[GEN_sync0*(1)+(1)-1-:(1)]),
      .out(M_sync_out[GEN_sync0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  
  localparam LISTEN_state = 2'd0;
  localparam PULSE_START_state = 2'd1;
  localparam PULSE_END_state = 2'd2;
  
  reg [1:0] M_state_d, M_state_q = LISTEN_state;
  
  always @* begin
    M_state_d = M_state_q;
    
    out = 1'h0;
    M_sync_in = pulse;
    M_edge_in = M_sync_out;
    
    case (M_state_q)
      LISTEN_state: begin
        out = 1'h0;
        if (M_edge_out) begin
          M_state_d = PULSE_START_state;
        end
      end
      PULSE_START_state: begin
        out = 1'h1;
        M_state_d = PULSE_END_state;
      end
      PULSE_END_state: begin
        out = 1'h1;
        M_state_d = LISTEN_state;
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
